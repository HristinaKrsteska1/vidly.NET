@model vidly.NET.ViewModels.NewCustomerViewModel

@{
    ViewBag.Title = "NewCustomer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customer</h2>

@using (Html.BeginForm("Create", "Customers")) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "Please fix the following errors", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Customer.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Customer.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Customer.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="MembershipTypeId">Membership type</label>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select membership type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Customer.MembershipTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Customer.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Customer.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Customer.Birthdate, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <label class="control-label col-md-2" for="IsSubscribedToNewsLetter">Subscribed to Newsletter?</label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Customer.IsSubscribedToNewsLetter)
                @Html.ValidationMessageFor(model => model.Customer.IsSubscribedToNewsLetter, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
